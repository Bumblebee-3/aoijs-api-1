/*
Aoi.js Functions API

Returns functions information based on the [docs](https://aoi.js.org/)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FunctionsGet200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionsGet200ResponseInner{}

// FunctionsGet200ResponseInner struct for FunctionsGet200ResponseInner
type FunctionsGet200ResponseInner struct {
	Function *string `json:"function,omitempty"`
	Description *string `json:"description,omitempty"`
	Usage *string `json:"usage,omitempty"`
	Example *string `json:"example,omitempty"`
	Table []FunctionsGet200ResponseInnerTableInner `json:"table,omitempty"`
	Package *string `json:"package,omitempty"`
	Documentation *string `json:"documentation,omitempty"`
	SourceCode *string `json:"source-code,omitempty"`
}

// NewFunctionsGet200ResponseInner instantiates a new FunctionsGet200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionsGet200ResponseInner() *FunctionsGet200ResponseInner {
	this := FunctionsGet200ResponseInner{}
	return &this
}

// NewFunctionsGet200ResponseInnerWithDefaults instantiates a new FunctionsGet200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionsGet200ResponseInnerWithDefaults() *FunctionsGet200ResponseInner {
	this := FunctionsGet200ResponseInner{}
	return &this
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetFunction() string {
	if o == nil || IsNil(o.Function) {
		var ret string
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetFunctionOk() (*string, bool) {
	if o == nil || IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasFunction() bool {
	if o != nil && !IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given string and assigns it to the Function field.
func (o *FunctionsGet200ResponseInner) SetFunction(v string) {
	o.Function = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FunctionsGet200ResponseInner) SetDescription(v string) {
	o.Description = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetUsage() string {
	if o == nil || IsNil(o.Usage) {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetUsageOk() (*string, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *FunctionsGet200ResponseInner) SetUsage(v string) {
	o.Usage = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetExample() string {
	if o == nil || IsNil(o.Example) {
		var ret string
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetExampleOk() (*string, bool) {
	if o == nil || IsNil(o.Example) {
		return nil, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasExample() bool {
	if o != nil && !IsNil(o.Example) {
		return true
	}

	return false
}

// SetExample gets a reference to the given string and assigns it to the Example field.
func (o *FunctionsGet200ResponseInner) SetExample(v string) {
	o.Example = &v
}

// GetTable returns the Table field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetTable() []FunctionsGet200ResponseInnerTableInner {
	if o == nil || IsNil(o.Table) {
		var ret []FunctionsGet200ResponseInnerTableInner
		return ret
	}
	return o.Table
}

// GetTableOk returns a tuple with the Table field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetTableOk() ([]FunctionsGet200ResponseInnerTableInner, bool) {
	if o == nil || IsNil(o.Table) {
		return nil, false
	}
	return o.Table, true
}

// HasTable returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasTable() bool {
	if o != nil && !IsNil(o.Table) {
		return true
	}

	return false
}

// SetTable gets a reference to the given []FunctionsGet200ResponseInnerTableInner and assigns it to the Table field.
func (o *FunctionsGet200ResponseInner) SetTable(v []FunctionsGet200ResponseInnerTableInner) {
	o.Table = v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *FunctionsGet200ResponseInner) SetPackage(v string) {
	o.Package = &v
}

// GetDocumentation returns the Documentation field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetDocumentation() string {
	if o == nil || IsNil(o.Documentation) {
		var ret string
		return ret
	}
	return *o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetDocumentationOk() (*string, bool) {
	if o == nil || IsNil(o.Documentation) {
		return nil, false
	}
	return o.Documentation, true
}

// HasDocumentation returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasDocumentation() bool {
	if o != nil && !IsNil(o.Documentation) {
		return true
	}

	return false
}

// SetDocumentation gets a reference to the given string and assigns it to the Documentation field.
func (o *FunctionsGet200ResponseInner) SetDocumentation(v string) {
	o.Documentation = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *FunctionsGet200ResponseInner) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionsGet200ResponseInner) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *FunctionsGet200ResponseInner) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *FunctionsGet200ResponseInner) SetSourceCode(v string) {
	o.SourceCode = &v
}

func (o FunctionsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionsGet200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.Example) {
		toSerialize["example"] = o.Example
	}
	if !IsNil(o.Table) {
		toSerialize["table"] = o.Table
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.Documentation) {
		toSerialize["documentation"] = o.Documentation
	}
	if !IsNil(o.SourceCode) {
		toSerialize["source-code"] = o.SourceCode
	}
	return toSerialize, nil
}

type NullableFunctionsGet200ResponseInner struct {
	value *FunctionsGet200ResponseInner
	isSet bool
}

func (v NullableFunctionsGet200ResponseInner) Get() *FunctionsGet200ResponseInner {
	return v.value
}

func (v *NullableFunctionsGet200ResponseInner) Set(val *FunctionsGet200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionsGet200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionsGet200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionsGet200ResponseInner(val *FunctionsGet200ResponseInner) *NullableFunctionsGet200ResponseInner {
	return &NullableFunctionsGet200ResponseInner{value: val, isSet: true}
}

func (v NullableFunctionsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionsGet200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


